name: Build and deploy
on:
  push:
    # Pattern matched against refs/tags
    tags:
      - "*"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      COMPOSER_VERSION: 1
      NODE_VERSION: 18

      OVH_SFTP_SERVER: ftp.cluster021.hosting.ovh.net

      REPOSITORY_NAME: fbanitz.fr
      REPOSITORY_URL: https://github.com/fbanitz/fbanitz.fr.git

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get the version
        id: get_version
        uses: "WyriHaximus/github-action-get-previous-tag@v1"

      - name: Update sculpin_site_prod.yml
        uses: fjogeleit/yaml-update-action@main
        with:
          valueFile: "app/config/sculpin_site_prod.yml"
          changes: |
            {
              "version" : "${{ steps.get_version.outputs.tag }}",
              "run_url" : "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
            }
          commitChange: false

      - name: Cache Vendor
        id: cache-vendor
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-vendor-${{ hashFiles('**/composer.lock') }}

      - name: Cache Node Modules
        id: cache-node-modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}

      - name: Cache Assets
        id: cache-assets
        uses: actions/cache@v3
        with:
          path: output_prod/assets
          key: ${{ runner.os }}-assets-${{ hashFiles('source/assets/*') }}

      - name: Install Yarn
        run: corepack enable

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'yarn'

      - name: Install dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: yarn install --immutable

      - name: Run composer install
        if: steps.cache-vendor.outputs.cache-hit != 'true' # Skip if cache hit
        uses: baschny/php-composer-action@v1
        with:
          composer_version: ${{ env.COMPOSER_VERSION }}
          command: install
          #github_oauth: ${{ secret.GITHUB_OAUTH }}

      - name: Build assets
        if: steps.cache-assets.outputs.cache-hit != 'true'
        run: yarn encore:prod

      - name: Generate with Scuplpin
        run: vendor/bin/sculpin generate --env=prod

      - name: Verify built assets
        working-directory: output_prod
        run: |
          if [ ! -f "assets/build/app.css" ]; then
            echo "Error: Built app.css asset is missing"
            exit 1
          fi
          if [ ! -f "assets/build/app.js" ]; then
            echo "Error: Built app.js asset is missing"
            exit 1
          fi

      - name: Check output files size
        uses: freenet-actions/check-file-size@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          directory: output_prod
          # max_size: 250
          post_comment: true
          fail_on_find: true

      - name: Archive production artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.REPOSITORY_NAME }}-${{ steps.get_version.outputs.tag }}
          path: output_prod

      - name: SFTP Upload
        uses: wangyucode/sftp-upload-action@v2.0.4
        with:
          host:  ${{ env.OVH_SFTP_SERVER }}
          username: ${{ secrets.OVH_SFTP_USER }}
          password: ${{ secrets.OVH_SFTP_PASSWORD }}
          localDir: "output_prod"
          remoteDir: "/home/${{ secrets.OVH_SFTP_USER }}/www/"
          removeExtraFilesOnServer: true
